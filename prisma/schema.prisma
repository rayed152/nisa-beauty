generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  CUSTOMER
}

enum OrderStatus {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}

model User {
  id          String   @id @default(uuid())
  clerkUserId String   @unique
  userName    String   @unique
  email       String   @unique
  firstName   String?
  lastName    String?
  role        UserRole @default(CUSTOMER)
  imageUrl    String?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  orders      Order[]
}

model Product {
  id                     String    @id @default(uuid())
  name                   String
  description            String
  price                  Int
  stock                  Int       @default(0)
  filePath               String
  imageUrl               String
  isAvailableForPurchase Boolean   @default(true)
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt
  category               String
  orders                 OrderProduct[]
}

model Order {
  id            String         @id @default(uuid())
  personId      String
  user          User           @relation(fields: [personId], references: [id], onDelete: Cascade)
  status        OrderStatus    @default(PENDING)
  totalPrice    Int
  orderDate     DateTime       @default(now())

  products      OrderProduct[]

  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model OrderProduct {
  orderId   String  @map("order_id")
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)

  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  quantity  Int

  @@id([orderId, productId])
  @@map("order_product")
}
